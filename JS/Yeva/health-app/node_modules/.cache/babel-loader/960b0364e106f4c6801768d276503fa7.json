{"ast":null,"code":"var _jsxFileName = \"/home/yeva/Desktop/New Folder/health-app/src/docs/api/input-api.js\";\nimport React from 'react';\nimport { defaultApiDoc } from '../index.js';\nimport { createApiDoc } from '../common.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst inputAttr = (dark, type, attr, def = '') => {\n  return createApiDoc(dark, attr, 'String', def, `Sets ${type}'s ${attr}.`);\n};\n\nconst inputState = (dark, type, attr) => {\n  return createApiDoc(dark, attr, 'Boolean', 'false', `Puts ${type} in ${attr} state.`);\n};\n\nexport const inputApi = (dark, type) => {\n  return [inputAttr(dark, type, 'type', \"'text'\"), inputAttr(dark, type, 'placeholder'), inputAttr(dark, type, 'autofocus'), inputState(dark, type, 'disabled'), inputState(dark, type, 'disabled'), inputAttr(dark, type, 'value'), inputAttr(dark, type, 'label'), inputAttr(dark, type, 'hint'), inputAttr(dark, type, 'name'), createApiDoc(dark, 'id', 'String', '[auto-generated]', `Sets the DOM id on the ${type}.`), createApiDoc(dark, 'inputStyles', 'Object', '{}', `Styles directly applied to the input.`), createApiDoc(dark, 'dense', 'Boolean', 'false', `Reduces the ${type}'s height tp 32px.`), createApiDoc(dark, 'uncontrolled', 'Boolean', 'false', 'Changes the behaviour of input to uncontrolled.'), createApiDoc(dark, 'hideExtra', 'Boolean', 'false', `Hides hint and validation errors.`), createApiDoc(dark, 'bordered', 'Boolean', 'false', `Applies a thin light border to ${type}.`), createApiDoc(dark, 'outlined', 'Boolean', 'false', `Applies a thin border and removes shadow style of ${type}.`), createApiDoc(dark, 'loading', 'Boolean', 'false', `Displays a indeterminate linear progress bar.`), createApiDoc(dark, 'counter', 'Number', '', `Creates a counter for ${type}'s length.`), createApiDoc(dark, 'height', 'Number', '40 | 32', `Sets ${type}'s height.`), createApiDoc(dark, 'width', 'Number', '', `Sets ${type}'s width.`), createApiDoc(dark, 'prepend', 'Node', '', `Prepends an element to the ${type}.`), createApiDoc(dark, 'rounded', 'boolean', 'false', `Adds a large border radius to the ${type}.`), createApiDoc(dark, 'append', 'Node', '', `Appends an element to the ${type}.`), createApiDoc(dark, 'rules', 'Array', '[]', /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"An array of functions that take an input value as an argument.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this), \"It must return either \", /*#__PURE__*/_jsxDEV(\"code\", {\n      children: \"true\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 31\n    }, this), \" / \", /*#__PURE__*/_jsxDEV(\"code\", {\n      children: \"false\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 51\n    }, this), \" or a\\xA0\", /*#__PURE__*/_jsxDEV(\"code\", {\n      children: \"string\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this), \" with an error message.\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 7\n  }, this))];\n};\nexport const textFieldApi = (dark, type) => {\n  return [...defaultApiDoc(dark), ...inputApi(dark, 'TextField')];\n};\nexport const textAreaApi = (dark, type) => {\n  return [...defaultApiDoc(dark), ...inputApi(dark, 'TextArea'), createApiDoc(dark, 'autoExpand', 'boolean', 'false', 'Automatically expand the textarea, vertically, depending on amount of text.')];\n};","map":{"version":3,"sources":["/home/yeva/Desktop/New Folder/health-app/src/docs/api/input-api.js"],"names":["React","defaultApiDoc","createApiDoc","inputAttr","dark","type","attr","def","inputState","inputApi","textFieldApi","textAreaApi"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport { defaultApiDoc } from '../index.js'\nimport { createApiDoc } from '../common.js'\n\nconst inputAttr = (dark, type, attr, def = '') => {\n  return createApiDoc(dark, attr, 'String', def, `Sets ${type}'s ${attr}.`)\n}\n\nconst inputState = (dark, type, attr) => {\n  return createApiDoc(\n    dark,\n    attr,\n    'Boolean',\n    'false',\n    `Puts ${type} in ${attr} state.`\n  )\n}\n\nexport const inputApi = (dark, type) => {\n  return [\n    inputAttr(dark, type, 'type', \"'text'\"),\n    inputAttr(dark, type, 'placeholder'),\n    inputAttr(dark, type, 'autofocus'),\n    inputState(dark, type, 'disabled'),\n    inputState(dark, type, 'disabled'),\n    inputAttr(dark, type, 'value'),\n    inputAttr(dark, type, 'label'),\n    inputAttr(dark, type, 'hint'),\n    inputAttr(dark, type, 'name'),\n    createApiDoc(\n      dark,\n      'id',\n      'String',\n      '[auto-generated]',\n      `Sets the DOM id on the ${type}.`\n    ),\n    createApiDoc(\n      dark,\n      'inputStyles',\n      'Object',\n      '{}',\n      `Styles directly applied to the input.`\n    ),\n    createApiDoc(\n      dark,\n      'dense',\n      'Boolean',\n      'false',\n      `Reduces the ${type}'s height tp 32px.`\n    ),\n    createApiDoc(\n      dark,\n      'uncontrolled',\n      'Boolean',\n      'false',\n      'Changes the behaviour of input to uncontrolled.'\n    ),\n    createApiDoc(\n      dark,\n      'hideExtra',\n      'Boolean',\n      'false',\n      `Hides hint and validation errors.`\n    ),\n    createApiDoc(\n      dark,\n      'bordered',\n      'Boolean',\n      'false',\n      `Applies a thin light border to ${type}.`\n    ),\n    createApiDoc(\n      dark,\n      'outlined',\n      'Boolean',\n      'false',\n      `Applies a thin border and removes shadow style of ${type}.`\n    ),\n    createApiDoc(\n      dark,\n      'loading',\n      'Boolean',\n      'false',\n      `Displays a indeterminate linear progress bar.`\n    ),\n    createApiDoc(\n      dark,\n      'counter',\n      'Number',\n      '',\n      `Creates a counter for ${type}'s length.`\n    ),\n    createApiDoc(dark, 'height', 'Number', '40 | 32', `Sets ${type}'s height.`),\n    createApiDoc(dark, 'width', 'Number', '', `Sets ${type}'s width.`),\n    createApiDoc(\n      dark,\n      'prepend',\n      'Node',\n      '',\n      `Prepends an element to the ${type}.`\n    ),\n    createApiDoc(\n      dark,\n      'rounded',\n      'boolean',\n      'false',\n      `Adds a large border radius to the ${type}.`\n    ),\n    createApiDoc(\n      dark,\n      'append',\n      'Node',\n      '',\n      `Appends an element to the ${type}.`\n    ),\n    createApiDoc(\n      dark,\n      'rules',\n      'Array',\n      '[]',\n      <div>\n        An array of functions that take an input value as an argument.\n        <br />\n        It must return either <code>true</code> / <code>false</code> or a&nbsp;\n        <code>string</code> with an error message.\n      </div>\n    )\n  ]\n}\n\nexport const textFieldApi = (dark, type) => {\n  return [...defaultApiDoc(dark), ...inputApi(dark, 'TextField')]\n}\n\nexport const textAreaApi = (dark, type) => {\n  return [\n    ...defaultApiDoc(dark),\n    ...inputApi(dark, 'TextArea'),\n    createApiDoc(\n      dark,\n      'autoExpand',\n      'boolean',\n      'false',\n      'Automatically expand the textarea, vertically, depending on amount of text.'\n    )\n  ]\n}\n"]},"metadata":{},"sourceType":"module"}