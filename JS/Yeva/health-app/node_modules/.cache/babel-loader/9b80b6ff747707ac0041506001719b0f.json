{"ast":null,"code":"var _jsxFileName = \"/home/yeva/Desktop/New Folder/health-app/src/pages/ToggleButtonView.jsx\";\nimport React from 'react';\nimport Icon from '@mdi/react';\nimport { mdiFormatBold, mdiFormatItalic, mdiFormatUnderline, mdiFormatAlignLeft, mdiFormatAlignRight, mdiFormatAlignCenter, mdiFormatAlignJustify } from '@mdi/js';\nimport { H4, H6, H5, Card, Divider, Subtitle1, ToggleButton, ToggleButtonGroup } from 'ui-neumorphism';\nimport DocCard from '../containers/DocCard.jsx';\nimport ApiCard from '../containers/ApiCard.jsx';\nimport { toggleSizes, toggleButtons, toggleButtonApi, toggleStandalone, toggleButtonGroupApi } from '../docs/';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = 'https://github.com/AKAspanion/ui-neumorphism/blob/master/example/src/pages/ToggleButtonView.jsx';\n\nclass ToggleButtonView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      standaloneActive: 1,\n      mandatoryActive: '1',\n      multipleActive: [],\n      active: ['1'],\n      key: 1\n    };\n  }\n\n  handleStandaloneChange(e) {\n    this.setState({\n      standaloneActive: e.value\n    });\n    this.setState({\n      key: this.state.key + 1\n    });\n  }\n\n  mandatoryGroupChange(e) {\n    this.setState({\n      mandatoryActive: e.active\n    });\n  }\n\n  multipleGroupChange(e) {\n    this.setState({\n      multipleActive: e.active\n    });\n  }\n\n  handleChange(e) {\n    this.setState({\n      active: e.active\n    });\n    this.setState({\n      key: this.state.key + 1\n    });\n  }\n\n  render() {\n    const {\n      dark\n    } = this.props;\n    const {\n      key,\n      active,\n      standaloneActive\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Card, {\n      flat: true,\n      dark: dark,\n      children: [/*#__PURE__*/_jsxDEV(H4, {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#component\",\n          name: \"component\",\n          children: /*#__PURE__*/_jsxDEV(H4, {\n            children: \"Toggle Buttons\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(H6, {\n        children: \"Toggle buttons can be used to group related options.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Subtitle1, {\n        className: \"mt-3\",\n        children: [\"To emphasize groups of related Toggle buttons, a group should share a common container.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), \"The \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"ToggleButtonGroup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this), \" controls the selected state of its child buttons when given its own value prop.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DocCard, {\n        className: \"mt-12\",\n        url: url + '#L101-L118',\n        title: /*#__PURE__*/_jsxDEV(H5, {\n          children: \"Mandatory selection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 18\n        }, this),\n        subtitle: /*#__PURE__*/_jsxDEV(Subtitle1, {\n          children: [\"Mandatory \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"ToggleButtonGroup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), \" always has a value.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this),\n        content: /*#__PURE__*/_jsxDEV(Card, {\n          flat: true,\n          outlined: false,\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            flat: true,\n            className: \"mt-4 d-flex flex-wrap align-center justify-center\",\n            children: /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n              value: \"1\",\n              mandatory: true,\n              text: false,\n              color: \"var(--primary)\",\n              onChange: this.mandatoryGroupChange.bind(this),\n              children: [mdiFormatAlignLeft, mdiFormatAlignCenter, mdiFormatAlignRight, mdiFormatAlignJustify].map((icon, i) => /*#__PURE__*/_jsxDEV(ToggleButton, {\n                disabled: i === 3,\n                value: `${i + 1}`,\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  path: icon,\n                  size: 0.9\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 23\n                }, this)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mx-auto pt-6\",\n            children: `{ active: ${JSON.stringify(this.state.mandatoryActive)} }`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this),\n        code: [toggleButtons, dark, ['mandatory']]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DocCard, {\n        className: \"mt-12\",\n        url: url + '#L144-L159',\n        title: /*#__PURE__*/_jsxDEV(H5, {\n          children: \"Multiple selection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 18\n        }, this),\n        subtitle: /*#__PURE__*/_jsxDEV(Subtitle1, {\n          children: [\"Multiple \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"ToggleButtonGroup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 24\n          }, this), \" allows user to select multiple values and returns all value as an array.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this),\n        content: /*#__PURE__*/_jsxDEV(Card, {\n          flat: true,\n          outlined: false,\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            flat: true,\n            outlined: false,\n            className: \"mt-4 d-flex flex-wrap align-center justify-center\",\n            children: /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n              multiple: true,\n              onChange: this.multipleGroupChange.bind(this),\n              children: [mdiFormatBold, mdiFormatItalic, mdiFormatUnderline].map((icon, i) => /*#__PURE__*/_jsxDEV(ToggleButton, {\n                value: `${i + 1}`,\n                color: \"var(--primary)\",\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  path: icon,\n                  size: 0.9\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 25\n                }, this)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mx-auto pt-6\",\n            children: `{ active: ${JSON.stringify(this.state.multipleActive)} }`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this),\n        code: [toggleButtons, dark, ['multiple']]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DocCard, {\n        className: \"mt-12\",\n        url: url + '#L186-L198',\n        title: /*#__PURE__*/_jsxDEV(H5, {\n          children: \"Standalone ToggleButtons\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 18\n        }, this),\n        subtitle: /*#__PURE__*/_jsxDEV(Subtitle1, {\n          children: [\"ToggleButtons can be used without the\\xA0\", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"ToggleButtonGroup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this), \" wrapper. You need to implement your own selection logic.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this),\n        content: /*#__PURE__*/_jsxDEV(Card, {\n          flat: true,\n          outlined: false,\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            flat: true,\n            outlined: false,\n            className: \"mt-4 d-flex flex-wrap align-center justify-center\",\n            children: [mdiFormatBold, mdiFormatItalic, mdiFormatUnderline].map((icon, i) => /*#__PURE__*/_jsxDEV(ToggleButton, {\n              value: i + 1,\n              color: \"var(--primary)\",\n              selected: standaloneActive === i + 1,\n              onChange: e => this.handleStandaloneChange(e),\n              children: /*#__PURE__*/_jsxDEV(Icon, {\n                path: icon,\n                size: 0.9\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 23\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mx-auto pt-6\",\n            children: `{ active: ${JSON.stringify(standaloneActive)} }`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this),\n        code: [toggleStandalone, dark]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DocCard, {\n        className: \"mt-12\",\n        url: url + '#L218-L246',\n        title: /*#__PURE__*/_jsxDEV(H5, {\n          children: \"Sizes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 18\n        }, this),\n        subtitle: /*#__PURE__*/_jsxDEV(Subtitle1, {\n          children: [\"Use \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 19\n          }, this), \" property to change button size.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this),\n        content: /*#__PURE__*/_jsxDEV(Card, {\n          flat: true,\n          outlined: false,\n          children: [['small', 'medium', 'large'].map((s, i) => /*#__PURE__*/_jsxDEV(Card, {\n            flat: true,\n            outlined: false,\n            className: \"mt-4 d-flex flex-wrap align-center justify-center\",\n            children: /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n              size: s,\n              multiple: true,\n              value: active,\n              className: \"mt-4\",\n              onChange: e => this.handleChange(e),\n              children: [mdiFormatBold, mdiFormatItalic, mdiFormatUnderline].map((icon, i) => /*#__PURE__*/_jsxDEV(ToggleButton, {\n                value: `${i + 1}`,\n                color: \"var(--primary)\",\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  path: icon,\n                  size: 0.9\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 27\n                }, this)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 25\n              }, this))\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 19\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mx-auto pt-6\",\n            children: `{ active: ${JSON.stringify(this.state.active)} }`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this),\n        code: [toggleSizes, dark]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        dense: true,\n        className: \"mt-6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(H4, {\n        className: \"mt-12\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#api\",\n          name: \"api\",\n          children: \"API\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ApiCard, {\n        entity: \"ToggleButtonGroup\",\n        data: toggleButtonGroupApi(dark)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-12\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ApiCard, {\n        entity: \"ToggleButton\",\n        data: toggleButtonApi(dark)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ToggleButtonView;","map":{"version":3,"sources":["/home/yeva/Desktop/New Folder/health-app/src/pages/ToggleButtonView.jsx"],"names":["React","Icon","mdiFormatBold","mdiFormatItalic","mdiFormatUnderline","mdiFormatAlignLeft","mdiFormatAlignRight","mdiFormatAlignCenter","mdiFormatAlignJustify","H4","H6","H5","Card","Divider","Subtitle1","ToggleButton","ToggleButtonGroup","DocCard","ApiCard","toggleSizes","toggleButtons","toggleButtonApi","toggleStandalone","toggleButtonGroupApi","url","ToggleButtonView","Component","constructor","props","state","standaloneActive","mandatoryActive","multipleActive","active","key","handleStandaloneChange","e","setState","value","mandatoryGroupChange","multipleGroupChange","handleChange","render","dark","bind","map","icon","i","JSON","stringify","s"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport Icon from '@mdi/react'\nimport {\n  mdiFormatBold,\n  mdiFormatItalic,\n  mdiFormatUnderline,\n  mdiFormatAlignLeft,\n  mdiFormatAlignRight,\n  mdiFormatAlignCenter,\n  mdiFormatAlignJustify\n} from '@mdi/js'\n\nimport {\n  H4,\n  H6,\n  H5,\n  Card,\n  Divider,\n  Subtitle1,\n  ToggleButton,\n  ToggleButtonGroup\n} from 'ui-neumorphism'\n\nimport DocCard from '../containers/DocCard.jsx'\nimport ApiCard from '../containers/ApiCard.jsx'\nimport {\n  toggleSizes,\n  toggleButtons,\n  toggleButtonApi,\n  toggleStandalone,\n  toggleButtonGroupApi\n} from '../docs/'\n\nconst url =\n  'https://github.com/AKAspanion/ui-neumorphism/blob/master/example/src/pages/ToggleButtonView.jsx'\n\nclass ToggleButtonView extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      standaloneActive: 1,\n      mandatoryActive: '1',\n      multipleActive: [],\n      active: ['1'],\n      key: 1\n    }\n  }\n\n  handleStandaloneChange(e) {\n    this.setState({ standaloneActive: e.value })\n    this.setState({ key: this.state.key + 1 })\n  }\n\n  mandatoryGroupChange(e) {\n    this.setState({ mandatoryActive: e.active })\n  }\n\n  multipleGroupChange(e) {\n    this.setState({ multipleActive: e.active })\n  }\n\n  handleChange(e) {\n    this.setState({ active: e.active })\n    this.setState({ key: this.state.key + 1 })\n  }\n\n  render() {\n    const { dark } = this.props\n    const { key, active, standaloneActive } = this.state\n    return (\n      <Card flat dark={dark}>\n        <H4>\n          <a href='#component' name='component'>\n            <H4>Toggle Buttons</H4>\n          </a>\n        </H4>\n        <H6>Toggle buttons can be used to group related options.</H6>\n        <Subtitle1 className='mt-3'>\n          To emphasize groups of related Toggle buttons, a group should share a\n          common container.\n          <br />\n          The <code>ToggleButtonGroup</code> controls the selected state of its\n          child buttons when given its own value prop.\n        </Subtitle1>\n        <DocCard\n          className='mt-12'\n          url={url + '#L101-L118'}\n          title={<H5>Mandatory selection</H5>}\n          subtitle={\n            <Subtitle1>\n              Mandatory <code>ToggleButtonGroup</code> always has a value.\n            </Subtitle1>\n          }\n          content={\n            <Card flat outlined={false}>\n              <Card\n                flat\n                className='mt-4 d-flex flex-wrap align-center justify-center'\n              >\n                <ToggleButtonGroup\n                  value='1'\n                  mandatory\n                  text={false}\n                  color='var(--primary)'\n                  onChange={this.mandatoryGroupChange.bind(this)}\n                >\n                  {[\n                    mdiFormatAlignLeft,\n                    mdiFormatAlignCenter,\n                    mdiFormatAlignRight,\n                    mdiFormatAlignJustify\n                  ].map((icon, i) => (\n                    <ToggleButton key={i} disabled={i === 3} value={`${i + 1}`}>\n                      <Icon path={icon} size={0.9} />\n                    </ToggleButton>\n                  ))}\n                </ToggleButtonGroup>\n              </Card>\n              <div className='text-center mx-auto pt-6'>\n                {`{ active: ${JSON.stringify(this.state.mandatoryActive)} }`}\n              </div>\n            </Card>\n          }\n          code={[toggleButtons, dark, ['mandatory']]}\n        />\n        <DocCard\n          className='mt-12'\n          url={url + '#L144-L159'}\n          title={<H5>Multiple selection</H5>}\n          subtitle={\n            <Subtitle1>\n              Multiple <code>ToggleButtonGroup</code> allows user to select\n              multiple values and returns all value as an array.\n            </Subtitle1>\n          }\n          content={\n            <Card flat outlined={false}>\n              <Card\n                flat\n                outlined={false}\n                className='mt-4 d-flex flex-wrap align-center justify-center'\n              >\n                <ToggleButtonGroup\n                  multiple\n                  onChange={this.multipleGroupChange.bind(this)}\n                >\n                  {[mdiFormatBold, mdiFormatItalic, mdiFormatUnderline].map(\n                    (icon, i) => (\n                      <ToggleButton\n                        key={i}\n                        value={`${i + 1}`}\n                        color='var(--primary)'\n                      >\n                        <Icon path={icon} size={0.9} />\n                      </ToggleButton>\n                    )\n                  )}\n                </ToggleButtonGroup>\n              </Card>\n              <div className='text-center mx-auto pt-6'>\n                {`{ active: ${JSON.stringify(this.state.multipleActive)} }`}\n              </div>\n            </Card>\n          }\n          code={[toggleButtons, dark, ['multiple']]}\n        />\n        <DocCard\n          className='mt-12'\n          url={url + '#L186-L198'}\n          title={<H5>Standalone ToggleButtons</H5>}\n          subtitle={\n            <Subtitle1>\n              ToggleButtons can be used without the&nbsp;\n              <code>ToggleButtonGroup</code> wrapper. You need to implement your\n              own selection logic.\n            </Subtitle1>\n          }\n          content={\n            <Card key={key} flat outlined={false}>\n              <Card\n                flat\n                outlined={false}\n                className='mt-4 d-flex flex-wrap align-center justify-center'\n              >\n                {[mdiFormatBold, mdiFormatItalic, mdiFormatUnderline].map(\n                  (icon, i) => (\n                    <ToggleButton\n                      key={i}\n                      value={i + 1}\n                      color='var(--primary)'\n                      selected={standaloneActive === i + 1}\n                      onChange={(e) => this.handleStandaloneChange(e)}\n                    >\n                      <Icon path={icon} size={0.9} />\n                    </ToggleButton>\n                  )\n                )}\n              </Card>\n              <div className='text-center mx-auto pt-6'>\n                {`{ active: ${JSON.stringify(standaloneActive)} }`}\n              </div>\n            </Card>\n          }\n          code={[toggleStandalone, dark]}\n        />\n        <DocCard\n          className='mt-12'\n          url={url + '#L218-L246'}\n          title={<H5>Sizes</H5>}\n          subtitle={\n            <Subtitle1>\n              Use <code>size</code> property to change button size.\n            </Subtitle1>\n          }\n          content={\n            <Card key={key} flat outlined={false}>\n              {['small', 'medium', 'large'].map((s, i) => (\n                <Card\n                  flat\n                  key={i}\n                  outlined={false}\n                  className='mt-4 d-flex flex-wrap align-center justify-center'\n                >\n                  <ToggleButtonGroup\n                    key={i}\n                    size={s}\n                    multiple\n                    value={active}\n                    className='mt-4'\n                    onChange={(e) => this.handleChange(e)}\n                  >\n                    {[mdiFormatBold, mdiFormatItalic, mdiFormatUnderline].map(\n                      (icon, i) => (\n                        <ToggleButton\n                          key={i}\n                          value={`${i + 1}`}\n                          color='var(--primary)'\n                        >\n                          <Icon path={icon} size={0.9} />\n                        </ToggleButton>\n                      )\n                    )}\n                  </ToggleButtonGroup>\n                </Card>\n              ))}\n              <div className='text-center mx-auto pt-6'>\n                {`{ active: ${JSON.stringify(this.state.active)} }`}\n              </div>\n            </Card>\n          }\n          code={[toggleSizes, dark]}\n        />\n        <Divider dense className='mt-6' />\n        <H4 className='mt-12'>\n          <a href='#api' name='api'>\n            API\n          </a>\n        </H4>\n        <ApiCard entity='ToggleButtonGroup' data={toggleButtonGroupApi(dark)} />\n        <div className='mt-12'></div>\n        <ApiCard entity='ToggleButton' data={toggleButtonApi(dark)} />\n      </Card>\n    )\n  }\n}\n\nexport default ToggleButtonView\n"]},"metadata":{},"sourceType":"module"}