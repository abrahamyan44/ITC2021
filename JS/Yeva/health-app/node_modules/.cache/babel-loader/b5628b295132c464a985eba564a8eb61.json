{"ast":null,"code":"var _jsxFileName = \"/home/yeva/Desktop/New Folder/health-app/src/pages/FormView.jsx\";\nimport React from 'react';\nimport { H4, H6, Subtitle1, Card } from 'ui-neumorphism';\nimport DocCard from '../containers/DocCard.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = 'https://github.com/AKAspanion/ui-neumorphism/blob/master/example/src/pages/ProgressLinearView.jsx';\n\nclass FormView extends React.Component {\n  render() {\n    const {\n      dark\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Card, {\n      flat: true,\n      dark: dark,\n      children: [/*#__PURE__*/_jsxDEV(H4, {\n        children: \"Forms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(H6, {\n        children: \"Forms are essential part of any application.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Subtitle1, {\n        className: \"mt-3\",\n        children: [\"The \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 15\n        }, this), \"component makes it easy to add validation to form inputs. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 19\n        }, this), \"All input components have a rules prop which takes an array of functions. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 22\n        }, this), \"These functions allow you to specify conditions in which the field is valid or invalid. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 29\n        }, this), \"Whenever the value of an input is changed, each function in the array will receive the new value. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 39\n        }, this), \"If a function returns false or a string, validation has failed.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DocCard, {\n        url: url,\n        className: \"mt-12\",\n        content: 'coming soon..'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default FormView;","map":{"version":3,"sources":["/home/yeva/Desktop/New Folder/health-app/src/pages/FormView.jsx"],"names":["React","H4","H6","Subtitle1","Card","DocCard","url","FormView","Component","render","dark","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,EAAT,EAAaC,EAAb,EAAiBC,SAAjB,EAA4BC,IAA5B,QAAwC,gBAAxC;AACA,OAAOC,OAAP,MAAoB,2BAApB;;AACA,MAAMC,GAAG,GACP,mGADF;;AAGA,MAAMC,QAAN,SAAuBP,KAAK,CAACQ,SAA7B,CAAuC;AACrCC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAW,KAAKC,KAAtB;AACA,wBACE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,IAAI,EAAED,IAAjB;AAAA,8BACE,QAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,SAAD;AAAW,QAAA,SAAS,EAAC,MAArB;AAAA,wCACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADN,6EAEU;AAAA;AAAA;AAAA;AAAA,gBAFV,6FAIa;AAAA;AAAA;AAAA;AAAA,gBAJb,2GAMoB;AAAA;AAAA;AAAA;AAAA,gBANpB,qHAQ8B;AAAA;AAAA;AAAA;AAAA,gBAR9B;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAcE,QAAC,OAAD;AACE,QAAA,GAAG,EAAEJ,GADP;AAEE,QAAA,SAAS,EAAC,OAFZ;AAGE,QAAA,OAAO,EAAE;AAHX;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAsBD;;AAzBoC;;AA4BvC,eAAeC,QAAf","sourcesContent":["import React from 'react'\n\nimport { H4, H6, Subtitle1, Card } from 'ui-neumorphism'\nimport DocCard from '../containers/DocCard.jsx'\nconst url =\n  'https://github.com/AKAspanion/ui-neumorphism/blob/master/example/src/pages/ProgressLinearView.jsx'\n\nclass FormView extends React.Component {\n  render() {\n    const { dark } = this.props\n    return (\n      <Card flat dark={dark}>\n        <H4>Forms</H4>\n        <H6>Forms are essential part of any application.</H6>\n        <Subtitle1 className='mt-3'>\n          The <code>Form</code>component makes it easy to add validation to form\n          inputs. <br />\n          All input components have a rules prop which takes an array of\n          functions. <br />\n          These functions allow you to specify conditions in which the field is\n          valid or invalid. <br />\n          Whenever the value of an input is changed, each function in the array\n          will receive the new value. <br />\n          If a function returns false or a string, validation has failed.\n        </Subtitle1>\n        <DocCard\n          url={url}\n          className='mt-12'\n          content={'coming soon..'}\n        />\n      </Card>\n    )\n  }\n}\n\nexport default FormView\n"]},"metadata":{},"sourceType":"module"}