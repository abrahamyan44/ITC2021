{"ast":null,"code":"var _jsxFileName = \"/home/yeva/Desktop/New Folder/health-app/src/docs/api/selection-control-api.js\";\nimport React from 'react';\nimport { createApiDoc, defaultApiDoc, eventDoc } from '../index.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const selectionControlApi = (dark, type, valueKey = 'value') => {\n  return [...defaultApiDoc(dark), createApiDoc(dark, 'id', 'String', '[auto-generated]', `The id of the ${type}.`), ...['name', 'label'].map(p => createApiDoc(dark, p, 'String', '', `The ${p} of the ${type}.`)), createApiDoc(dark, 'value', 'any', '', `The value of the ${type}.`), createApiDoc(dark, 'checked', 'Boolean', 'false', /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"The \", type, \" is checked, if \", /*#__PURE__*/_jsxDEV(\"code\", {\n      children: \"true\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 35\n    }, this), \".\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }, this)), createApiDoc(dark, 'required', 'Boolean', 'false', 'A value is required in a form to be submittable.'), createApiDoc(dark, 'disabled', 'Boolean', 'false', `Renders the ${type} disabled.`), createApiDoc(dark, 'color', 'String', /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Light:\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: 'var(--primary-dark)'\n        },\n        children: \"--g-text-color-light\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Dark:\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: 'var(--primary-dark)'\n        },\n        children: \"--g-text-color-dark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this), `Applies specified color to the ${type}.`), eventDoc(dark, 'Change', 'Response object definition', `{\n    id: prop id | [auto-generated],\n    event: native change event,\n    ${valueKey}: true | false\n}`), eventDoc(dark, 'Click'), eventDoc(dark, 'MouseUp'), eventDoc(dark, 'MouseOut'), eventDoc(dark, 'MouseMove'), eventDoc(dark, 'MouseDown'), eventDoc(dark, 'MouseOver'), eventDoc(dark, 'MouseEnter'), eventDoc(dark, 'MouseLeave')];\n};\nexport const switchApi = dark => {\n  return selectionControlApi(dark, 'Switch');\n};\nexport const checkboxApi = dark => {\n  return selectionControlApi(dark, 'Checkbox');\n};\nexport const radioApi = dark => {\n  return [...selectionControlApi(dark, 'Radio', 'checked')];\n};\nexport const radioGroupApi = dark => {\n  return [...defaultApiDoc(dark), createApiDoc(dark, 'id', 'String', '[auto-generated]', `Gives an id to the group.`), createApiDoc(dark, 'value', 'any', '', 'The currently selected value within the group.'), createApiDoc(dark, 'disabled', 'Boolean', 'false', 'Removes the ability to click or target the group.'), createApiDoc(dark, 'color', 'String', /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Light:\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: 'var(--primary-dark)'\n        },\n        children: \"--g-text-color-light\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Dark:\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: 'var(--primary-dark)'\n        },\n        children: \"--g-text-color-dark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 7\n  }, this), 'Applies specified color to the group radios.'), eventDoc(dark, 'Change', 'Response object definition', `{ \n    id: prop id | [auto-generated],\n    value: selected Radio's value,\n    event: Radio's \\`onChange\\` event,\n}`), createApiDoc(dark, 'vertical', 'Boolean', 'false', 'Changes orientation of radios inside group to vertical.')];\n};","map":{"version":3,"sources":["/home/yeva/Desktop/New Folder/health-app/src/docs/api/selection-control-api.js"],"names":["React","createApiDoc","defaultApiDoc","eventDoc","selectionControlApi","dark","type","valueKey","map","p","color","switchApi","checkboxApi","radioApi","radioGroupApi"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { createApiDoc, defaultApiDoc, eventDoc } from '../index.js'\n\nexport const selectionControlApi = (dark, type, valueKey = 'value') => {\n  return [\n    ...defaultApiDoc(dark),\n    createApiDoc(\n      dark,\n      'id',\n      'String',\n      '[auto-generated]',\n      `The id of the ${type}.`\n    ),\n    ...['name', 'label'].map((p) =>\n      createApiDoc(dark, p, 'String', '', `The ${p} of the ${type}.`)\n    ),\n    createApiDoc(dark, 'value', 'any', '', `The value of the ${type}.`),\n    createApiDoc(\n      dark,\n      'checked',\n      'Boolean',\n      'false',\n      <div>\n        The {type} is checked, if <code>true</code>.\n      </div>\n    ),\n    createApiDoc(\n      dark,\n      'required',\n      'Boolean',\n      'false',\n      'A value is required in a form to be submittable.'\n    ),\n    createApiDoc(\n      dark,\n      'disabled',\n      'Boolean',\n      'false',\n      `Renders the ${type} disabled.`\n    ),\n    createApiDoc(\n      dark,\n      'color',\n      'String',\n      <div>\n        <div>\n          Light:&nbsp;&nbsp;\n          <span style={{ color: 'var(--primary-dark)' }}>\n            --g-text-color-light\n          </span>\n        </div>\n        <div>\n          Dark:&nbsp;&nbsp;\n          <span style={{ color: 'var(--primary-dark)' }}>\n            --g-text-color-dark\n          </span>\n        </div>\n      </div>,\n      `Applies specified color to the ${type}.`\n    ),\n    eventDoc(\n      dark,\n      'Change',\n      'Response object definition',\n      `{\n    id: prop id | [auto-generated],\n    event: native change event,\n    ${valueKey}: true | false\n}`\n    ),\n    eventDoc(dark, 'Click'),\n    eventDoc(dark, 'MouseUp'),\n    eventDoc(dark, 'MouseOut'),\n    eventDoc(dark, 'MouseMove'),\n    eventDoc(dark, 'MouseDown'),\n    eventDoc(dark, 'MouseOver'),\n    eventDoc(dark, 'MouseEnter'),\n    eventDoc(dark, 'MouseLeave')\n  ]\n}\n\nexport const switchApi = (dark) => {\n  return selectionControlApi(dark, 'Switch')\n}\n\nexport const checkboxApi = (dark) => {\n  return selectionControlApi(dark, 'Checkbox')\n}\n\nexport const radioApi = (dark) => {\n  return [...selectionControlApi(dark, 'Radio', 'checked')]\n}\n\nexport const radioGroupApi = (dark) => {\n  return [\n    ...defaultApiDoc(dark),\n    createApiDoc(\n      dark,\n      'id',\n      'String',\n      '[auto-generated]',\n      `Gives an id to the group.`\n    ),\n    createApiDoc(\n      dark,\n      'value',\n      'any',\n      '',\n      'The currently selected value within the group.'\n    ),\n    createApiDoc(\n      dark,\n      'disabled',\n      'Boolean',\n      'false',\n      'Removes the ability to click or target the group.'\n    ),\n    createApiDoc(\n      dark,\n      'color',\n      'String',\n      <div>\n        <div>\n          Light:&nbsp;&nbsp;\n          <span style={{ color: 'var(--primary-dark)' }}>\n            --g-text-color-light\n          </span>\n        </div>\n        <div>\n          Dark:&nbsp;&nbsp;\n          <span style={{ color: 'var(--primary-dark)' }}>\n            --g-text-color-dark\n          </span>\n        </div>\n      </div>,\n      'Applies specified color to the group radios.'\n    ),\n    eventDoc(\n      dark,\n      'Change',\n      'Response object definition',\n      `{ \n    id: prop id | [auto-generated],\n    value: selected Radio's value,\n    event: Radio's \\`onChange\\` event,\n}`\n    ),\n    createApiDoc(\n      dark,\n      'vertical',\n      'Boolean',\n      'false',\n      'Changes orientation of radios inside group to vertical.'\n    )\n  ]\n}\n"]},"metadata":{},"sourceType":"module"}