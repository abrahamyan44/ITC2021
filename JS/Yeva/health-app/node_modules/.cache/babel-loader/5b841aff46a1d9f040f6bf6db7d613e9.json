{"ast":null,"code":"export const simpleAlert = (dark, prop) => {\n  const d = dark ? ' dark' : '';\n  const p = prop ? prop + ' ' : '';\n  return `<Alert${d} ${p}type='success'>\n  I'm a success alert.\n</Alert>\n<Alert${d} ${p}type='info'>\n  I'm an info alert.\n</Alert>\n<Alert${d} ${p}type='warning'>\n  I'm a warning alert.\n</Alert>\n<Alert${d} ${p}type='error'>\n  I'm an error alert.\n</Alert>`;\n};\nexport const bulkAlert = dark => {\n  const d = dark ? ' dark' : '';\n  return `<Alert${d} type='success' flat>\n  I'm a success alert.\n</Alert>\n<Alert${d} type='info' bordered>\n  I'm an info alert.\n</Alert>\n<Alert${d} type='warning' rounded>\n  I'm a warning alert.\n</Alert>\n<Alert${d} type='error' outlined>\n  I'm an error alert.\n</Alert>`;\n};\nexport const colorAlert = dark => {\n  const d = dark ? ' dark' : '';\n  return `<Alert${d} color='#6200EA'>\n  I'm an alert with #6200EA color.\n</Alert>\n<Alert${d} color='magenta'>\n  I'm an alert with magenta color.\n</Alert>`;\n};\nexport const borderAlert = dark => {\n  const d = dark ? ' dark' : '';\n  return `<Alert${d} type='success' border='top'>\n  I'm a success alert.\n</Alert>\n<Alert${d} type='info' border='left'>\n  I'm an info alert.\n</Alert>\n<Alert${d} color='magenta' border='right'>\n  I'm a magenta alert.\n</Alert>\n<Alert${d} type='error' border='bottom'>\n  I'm an error alert.\n</Alert>`;\n};\nexport const denseAlert = dark => {\n  const d = dark ? ' dark' : '';\n  return `<Alert${d} type='success' dense>\n  I'm a success alert.\n</Alert>\n<Alert${d} border='left' type='info' dense>\n  I'm an info alert.\n</Alert>\n<Alert${d} color='magenta' dense inset>\n  I'm a magenta alert.\n</Alert>\n<Alert${d} type='error' dense outlined>\n  I'm an error alert.\n</Alert>`;\n};\nexport const iconAlert = dark => {\n  const d = dark ? '\\n  dark' : '';\n  return `// Icon component is from '@mdi/react' and is not bundled with this library\n<Alert${d}\n  type='success'\n  icon={<Icon path={mdiCheckCircle} size={1} />}\n>\n  I'm a success alert.\n</Alert>\n<Alert${d}\n  type='info'\n  icon={<Icon path={mdiInformationVariant} size={1} />}\n>\n  I'm an info alert.\n</Alert>\n<Alert${d}\n  type='warning'\n  icon={<Icon path={mdiInformationOutline} size={1} />}\n>\n  I'm a warning alert.\n</Alert>\n<Alert${d}\n  type='error'\n  icon={<Icon path={mdiAlert} size={1} />}\n>\n  I'm an error alert.\n</Alert>`;\n};\nexport const closeAlert = dark => {\n  const d = dark ? '\\n  dark' : '';\n  return `// Icon component is from '@mdi/react' and is not bundled with this library\n<Alert${d}\n  rounded\n  closable\n  type='error'\n  border='left'\n  visible={this.state.visible1}\n  icon={<Icon path={mdiAlert} size={1} />}\n  onClose={() => this.setState({ visible1: false })}\n>\n  Click on close button to hide me.\n</Alert>\n{this.state.visible1 ? null : (\n  <Card flat className='mb-6'>\n    <Button onClick={() => this.setState({ visible1: true })}>\n      show\n    </Button>\n  </Card>\n)}\n<Alert${d}\n  closable\n  border='left'\n  type='success'\n  visible={this.state.visible2}\n  icon={<Icon path={mdiCheckCircle} size={1} />}\n  closeIcon={<Icon path={mdiCloseCircle} size={1} />}\n  onClose={() => this.setState({ visible2: false })}\n>\n  I have custom close Icon.\n</Alert>\n{this.state.visible2 ? null : (\n  <Card flat className='mb-6'>\n    <Button onClick={() => this.setState({ visible2: true })}>\n      show\n    </Button>\n  </Card>\n)}`;\n};","map":{"version":3,"sources":["/home/yeva/Desktop/New Folder/health-app/src/docs/code/alert-code.js"],"names":["simpleAlert","dark","prop","d","p","bulkAlert","colorAlert","borderAlert","denseAlert","iconAlert","closeAlert"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;AACzC,QAAMC,CAAC,GAAGF,IAAI,GAAG,OAAH,GAAa,EAA3B;AACA,QAAMG,CAAC,GAAGF,IAAI,GAAGA,IAAI,GAAG,GAAV,GAAgB,EAA9B;AACA,SAAQ,SAAQC,CAAE,IAAGC,CAAE;AACzB;AACA;AACA,QAAQD,CAAE,IAAGC,CAAE;AACf;AACA;AACA,QAAQD,CAAE,IAAGC,CAAE;AACf;AACA;AACA,QAAQD,CAAE,IAAGC,CAAE;AACf;AACA,SAXE;AAYD,CAfM;AAiBP,OAAO,MAAMC,SAAS,GAAIJ,IAAD,IAAU;AACjC,QAAME,CAAC,GAAGF,IAAI,GAAG,OAAH,GAAa,EAA3B;AACA,SAAQ,SAAQE,CAAE;AACpB;AACA;AACA,QAAQA,CAAE;AACV;AACA;AACA,QAAQA,CAAE;AACV;AACA;AACA,QAAQA,CAAE;AACV;AACA,SAXE;AAYD,CAdM;AAgBP,OAAO,MAAMG,UAAU,GAAIL,IAAD,IAAU;AAClC,QAAME,CAAC,GAAGF,IAAI,GAAG,OAAH,GAAa,EAA3B;AACA,SAAQ,SAAQE,CAAE;AACpB;AACA;AACA,QAAQA,CAAE;AACV;AACA,SALE;AAMD,CARM;AAUP,OAAO,MAAMI,WAAW,GAAIN,IAAD,IAAU;AACnC,QAAME,CAAC,GAAGF,IAAI,GAAG,OAAH,GAAa,EAA3B;AACA,SAAQ,SAAQE,CAAE;AACpB;AACA;AACA,QAAQA,CAAE;AACV;AACA;AACA,QAAQA,CAAE;AACV;AACA;AACA,QAAQA,CAAE;AACV;AACA,SAXE;AAYD,CAdM;AAgBP,OAAO,MAAMK,UAAU,GAAIP,IAAD,IAAU;AAClC,QAAME,CAAC,GAAGF,IAAI,GAAG,OAAH,GAAa,EAA3B;AACA,SAAQ,SAAQE,CAAE;AACpB;AACA;AACA,QAAQA,CAAE;AACV;AACA;AACA,QAAQA,CAAE;AACV;AACA;AACA,QAAQA,CAAE;AACV;AACA,SAXE;AAYD,CAdM;AAgBP,OAAO,MAAMM,SAAS,GAAIR,IAAD,IAAU;AACjC,QAAME,CAAC,GAAGF,IAAI,GAAG,UAAH,GAAgB,EAA9B;AACA,SAAQ;AACV,QAAQE,CAAE;AACV;AACA;AACA;AACA;AACA;AACA,QAAQA,CAAE;AACV;AACA;AACA;AACA;AACA;AACA,QAAQA,CAAE;AACV;AACA;AACA;AACA;AACA;AACA,QAAQA,CAAE;AACV;AACA;AACA;AACA;AACA,SAxBE;AAyBD,CA3BM;AA6BP,OAAO,MAAMO,UAAU,GAAIT,IAAD,IAAU;AAClC,QAAME,CAAC,GAAGF,IAAI,GAAG,UAAH,GAAgB,EAA9B;AACA,SAAQ;AACV,QAAQE,CAAE;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQA,CAAE;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GApCE;AAqCD,CAvCM","sourcesContent":["export const simpleAlert = (dark, prop) => {\n  const d = dark ? ' dark' : ''\n  const p = prop ? prop + ' ' : ''\n  return `<Alert${d} ${p}type='success'>\n  I'm a success alert.\n</Alert>\n<Alert${d} ${p}type='info'>\n  I'm an info alert.\n</Alert>\n<Alert${d} ${p}type='warning'>\n  I'm a warning alert.\n</Alert>\n<Alert${d} ${p}type='error'>\n  I'm an error alert.\n</Alert>`\n}\n\nexport const bulkAlert = (dark) => {\n  const d = dark ? ' dark' : ''\n  return `<Alert${d} type='success' flat>\n  I'm a success alert.\n</Alert>\n<Alert${d} type='info' bordered>\n  I'm an info alert.\n</Alert>\n<Alert${d} type='warning' rounded>\n  I'm a warning alert.\n</Alert>\n<Alert${d} type='error' outlined>\n  I'm an error alert.\n</Alert>`\n}\n\nexport const colorAlert = (dark) => {\n  const d = dark ? ' dark' : ''\n  return `<Alert${d} color='#6200EA'>\n  I'm an alert with #6200EA color.\n</Alert>\n<Alert${d} color='magenta'>\n  I'm an alert with magenta color.\n</Alert>`\n}\n\nexport const borderAlert = (dark) => {\n  const d = dark ? ' dark' : ''\n  return `<Alert${d} type='success' border='top'>\n  I'm a success alert.\n</Alert>\n<Alert${d} type='info' border='left'>\n  I'm an info alert.\n</Alert>\n<Alert${d} color='magenta' border='right'>\n  I'm a magenta alert.\n</Alert>\n<Alert${d} type='error' border='bottom'>\n  I'm an error alert.\n</Alert>`\n}\n\nexport const denseAlert = (dark) => {\n  const d = dark ? ' dark' : ''\n  return `<Alert${d} type='success' dense>\n  I'm a success alert.\n</Alert>\n<Alert${d} border='left' type='info' dense>\n  I'm an info alert.\n</Alert>\n<Alert${d} color='magenta' dense inset>\n  I'm a magenta alert.\n</Alert>\n<Alert${d} type='error' dense outlined>\n  I'm an error alert.\n</Alert>`\n}\n\nexport const iconAlert = (dark) => {\n  const d = dark ? '\\n  dark' : ''\n  return `// Icon component is from '@mdi/react' and is not bundled with this library\n<Alert${d}\n  type='success'\n  icon={<Icon path={mdiCheckCircle} size={1} />}\n>\n  I'm a success alert.\n</Alert>\n<Alert${d}\n  type='info'\n  icon={<Icon path={mdiInformationVariant} size={1} />}\n>\n  I'm an info alert.\n</Alert>\n<Alert${d}\n  type='warning'\n  icon={<Icon path={mdiInformationOutline} size={1} />}\n>\n  I'm a warning alert.\n</Alert>\n<Alert${d}\n  type='error'\n  icon={<Icon path={mdiAlert} size={1} />}\n>\n  I'm an error alert.\n</Alert>`\n}\n\nexport const closeAlert = (dark) => {\n  const d = dark ? '\\n  dark' : ''\n  return `// Icon component is from '@mdi/react' and is not bundled with this library\n<Alert${d}\n  rounded\n  closable\n  type='error'\n  border='left'\n  visible={this.state.visible1}\n  icon={<Icon path={mdiAlert} size={1} />}\n  onClose={() => this.setState({ visible1: false })}\n>\n  Click on close button to hide me.\n</Alert>\n{this.state.visible1 ? null : (\n  <Card flat className='mb-6'>\n    <Button onClick={() => this.setState({ visible1: true })}>\n      show\n    </Button>\n  </Card>\n)}\n<Alert${d}\n  closable\n  border='left'\n  type='success'\n  visible={this.state.visible2}\n  icon={<Icon path={mdiCheckCircle} size={1} />}\n  closeIcon={<Icon path={mdiCloseCircle} size={1} />}\n  onClose={() => this.setState({ visible2: false })}\n>\n  I have custom close Icon.\n</Alert>\n{this.state.visible2 ? null : (\n  <Card flat className='mb-6'>\n    <Button onClick={() => this.setState({ visible2: true })}>\n      show\n    </Button>\n  </Card>\n)}`\n}\n"]},"metadata":{},"sourceType":"module"}