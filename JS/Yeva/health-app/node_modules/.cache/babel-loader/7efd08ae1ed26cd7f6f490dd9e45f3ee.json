{"ast":null,"code":"var _jsxFileName = \"/home/yeva/Desktop/New Folder/health-app/src/containers/MainContainer.jsx\";\nimport React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport { Switch, Route, withRouter } from 'react-router-dom';\nimport { Card, Divider, withResize, overrideThemeVariables } from 'ui-neumorphism';\nimport 'ui-neumorphism/dist/index.css';\nimport Topbar from '../containers/Topbar.jsx';\nimport Sidebar from '../containers/Sidebar.jsx';\nimport RightBar from '../containers/RightBar.jsx';\nimport routes from '../routes/index.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MainContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.mainView = null;\n    this.state = {\n      dark: false,\n      open: false\n    };\n    this.toggleTheme = this.toggleTheme.bind(this);\n    this.toggleSidebar = this.toggleSidebar.bind(this);\n    this.onSidebarClick = this.onSidebarClick.bind(this);\n  }\n\n  get isHome() {\n    const {\n      pathname: p\n    } = this.props.location;\n    return p === '/' || p === '/home' || p === '/examples' || p === '/typography';\n  }\n\n  toggleTheme() {\n    overrideThemeVariables({\n      '--light-bg': '#E4EBF5',\n      '--light-bg-dark-shadow': '#bec8e4',\n      '--light-bg-light-shadow': '#ffffff',\n      '--dark-bg': '#444444',\n      '--dark-bg-dark-shadow': '#363636',\n      '--dark-bg-light-shadow': '#525252',\n      '--primary': '#2979ff',\n      '--primary-dark': '#2962ff',\n      '--primary-light': '#82b1ff'\n    });\n    this.setState({\n      dark: !this.state.dark\n    });\n  }\n\n  toggleSidebar() {\n    this.setState({\n      open: !this.state.open\n    });\n  }\n\n  onSidebarClick() {\n    this.mainView.scroll({\n      top: 0,\n      left: 0,\n      behavior: 'smooth'\n    });\n  }\n\n  render() {\n    const {\n      isHome\n    } = this;\n    const {\n      size\n    } = this.props;\n    const {\n      dark,\n      open\n    } = this.state;\n    const isSmall = size === 'sm' || size === 'xs';\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: `theme--${dark ? 'dark' : 'light'}`,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        flat: true,\n        dark: dark,\n        className: `main-container ${isSmall ? 'main-container-sm' : ''}`,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Topbar, {\n            size: size,\n            dark: dark,\n            onClick: this.toggleTheme,\n            onMenuClick: this.toggleSidebar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            dense: true,\n            dark: dark\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            flat: true,\n            className: \"main-content\",\n            children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n              dark: dark,\n              open: open,\n              size: size,\n              onClick: this.onSidebarClick,\n              onOutsideClick: this.toggleSidebar\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card, {\n              flat: true,\n              id: \"mainView\",\n              ref: ref => this.mainView = findDOMNode(ref),\n              className: `main-view main-view--${!isSmall ? 'large' : 'small'} ${isHome ? 'main-view--home' : ''} ${open ? 'main-view--open' : ''}`,\n              children: /*#__PURE__*/_jsxDEV(Switch, {\n                children: routes.map(route => /*#__PURE__*/_jsxDEV(Route, {\n                  exact: true,\n                  path: route.path,\n                  component: () => /*#__PURE__*/_jsxDEV(route.component, {\n                    dark: dark\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 40\n                  }, this)\n                }, route.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), isSmall || isHome ? null : /*#__PURE__*/_jsxDEV(RightBar, {\n              dark: dark,\n              size: size\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 43\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c2 = withRouter(_c = withResize(MainContainer, {\n  onlyWidth: true\n}));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"%default%$withRouter\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/yeva/Desktop/New Folder/health-app/src/containers/MainContainer.jsx"],"names":["React","findDOMNode","Switch","Route","withRouter","Card","Divider","withResize","overrideThemeVariables","Topbar","Sidebar","RightBar","routes","MainContainer","Component","constructor","props","mainView","state","dark","open","toggleTheme","bind","toggleSidebar","onSidebarClick","isHome","pathname","p","location","setState","scroll","top","left","behavior","render","size","isSmall","ref","map","route","path","id","onlyWidth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,UAAxB,QAA0C,kBAA1C;AAEA,SACEC,IADF,EAEEC,OAFF,EAGEC,UAHF,EAIEC,sBAJF,QAKO,gBALP;AAMA,OAAO,+BAAP;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;;;AAEA,MAAMC,aAAN,SAA4Bb,KAAK,CAACc,SAAlC,CAA4C;AAG1CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAFnBC,QAEmB,GAFR,IAEQ;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,KADK;AAEXC,MAAAA,IAAI,EAAE;AAFK,KAAb;AAIA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKE,cAAL,GAAsB,KAAKA,cAAL,CAAoBF,IAApB,CAAyB,IAAzB,CAAtB;AACD;;AAES,MAANG,MAAM,GAAG;AACX,UAAM;AAAEC,MAAAA,QAAQ,EAAEC;AAAZ,QAAkB,KAAKX,KAAL,CAAWY,QAAnC;AACA,WACED,CAAC,KAAK,GAAN,IAAaA,CAAC,KAAK,OAAnB,IAA8BA,CAAC,KAAK,WAApC,IAAmDA,CAAC,KAAK,aAD3D;AAGD;;AAEDN,EAAAA,WAAW,GAAG;AACZb,IAAAA,sBAAsB,CAAC;AACrB,oBAAc,SADO;AAErB,gCAA0B,SAFL;AAGrB,iCAA2B,SAHN;AAIrB,mBAAa,SAJQ;AAKrB,+BAAyB,SALJ;AAMrB,gCAA0B,SANL;AAOrB,mBAAa,SAPQ;AAQrB,wBAAkB,SARG;AASrB,yBAAmB;AATE,KAAD,CAAtB;AAWA,SAAKqB,QAAL,CAAc;AAAEV,MAAAA,IAAI,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAApB,KAAd;AACD;;AAEDI,EAAAA,aAAa,GAAG;AACd,SAAKM,QAAL,CAAc;AAAET,MAAAA,IAAI,EAAE,CAAC,KAAKF,KAAL,CAAWE;AAApB,KAAd;AACD;;AAEDI,EAAAA,cAAc,GAAG;AACf,SAAKP,QAAL,CAAca,MAAd,CAAqB;AACnBC,MAAAA,GAAG,EAAE,CADc;AAEnBC,MAAAA,IAAI,EAAE,CAFa;AAGnBC,MAAAA,QAAQ,EAAE;AAHS,KAArB;AAKD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAET,MAAAA;AAAF,QAAa,IAAnB;AACA,UAAM;AAAEU,MAAAA;AAAF,QAAW,KAAKnB,KAAtB;AACA,UAAM;AAAEG,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAiB,KAAKF,KAA5B;AACA,UAAMkB,OAAO,GAAGD,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,IAA1C;AACA,wBACE;AAAM,MAAA,SAAS,EAAG,UAAShB,IAAI,GAAG,MAAH,GAAY,OAAQ,EAAnD;AAAA,6BACE,QAAC,IAAD;AACE,QAAA,IAAI,MADN;AAEE,QAAA,IAAI,EAAEA,IAFR;AAGE,QAAA,SAAS,EAAG,kBAAiBiB,OAAO,GAAG,mBAAH,GAAyB,EAAG,EAHlE;AAAA,+BAKE,QAAC,IAAD;AAAA,kCACE,QAAC,MAAD;AACE,YAAA,IAAI,EAAED,IADR;AAEE,YAAA,IAAI,EAAEhB,IAFR;AAGE,YAAA,OAAO,EAAE,KAAKE,WAHhB;AAIE,YAAA,WAAW,EAAE,KAAKE;AAJpB;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE,QAAC,OAAD;AAAS,YAAA,KAAK,MAAd;AAAe,YAAA,IAAI,EAAEJ;AAArB;AAAA;AAAA;AAAA;AAAA,kBAPF,eAQE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,SAAS,EAAC,cAArB;AAAA,oCACE,QAAC,OAAD;AACE,cAAA,IAAI,EAAEA,IADR;AAEE,cAAA,IAAI,EAAEC,IAFR;AAGE,cAAA,IAAI,EAAEe,IAHR;AAIE,cAAA,OAAO,EAAE,KAAKX,cAJhB;AAKE,cAAA,cAAc,EAAE,KAAKD;AALvB;AAAA;AAAA;AAAA;AAAA,oBADF,eAQE,QAAC,IAAD;AACE,cAAA,IAAI,MADN;AAEE,cAAA,EAAE,EAAC,UAFL;AAGE,cAAA,GAAG,EAAGc,GAAD,IAAU,KAAKpB,QAAL,GAAgBhB,WAAW,CAACoC,GAAD,CAH5C;AAIE,cAAA,SAAS,EAAG,wBACV,CAACD,OAAD,GAAW,OAAX,GAAqB,OACtB,IAAGX,MAAM,GAAG,iBAAH,GAAuB,EAAG,IAClCL,IAAI,GAAG,iBAAH,GAAuB,EAC5B,EARH;AAAA,qCAUE,QAAC,MAAD;AAAA,0BACGR,MAAM,CAAC0B,GAAP,CAAYC,KAAD,iBACV,QAAC,KAAD;AACE,kBAAA,KAAK,MADP;AAGE,kBAAA,IAAI,EAAEA,KAAK,CAACC,IAHd;AAIE,kBAAA,SAAS,EAAE,mBAAM,QAAC,KAAD,CAAO,SAAP;AAAiB,oBAAA,IAAI,EAAErB;AAAvB;AAAA;AAAA;AAAA;AAAA;AAJnB,mBAEOoB,KAAK,CAACE,EAFb;AAAA;AAAA;AAAA;AAAA,wBADD;AADH;AAAA;AAAA;AAAA;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA,oBARF,EA6BGL,OAAO,IAAIX,MAAX,GAAoB,IAApB,gBAA2B,QAAC,QAAD;AAAU,cAAA,IAAI,EAAEN,IAAhB;AAAsB,cAAA,IAAI,EAAEgB;AAA5B;AAAA;AAAA;AAAA;AAAA,oBA7B9B;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAkDD;;AAvGyC;;AA0G5C,qBAAe/B,UAAU,MAACG,UAAU,CAACM,aAAD,EAAgB;AAAE6B,EAAAA,SAAS,EAAE;AAAb,CAAhB,CAAX,CAAzB","sourcesContent":["import React from 'react'\nimport { findDOMNode } from 'react-dom'\nimport { Switch, Route, withRouter } from 'react-router-dom'\n\nimport {\n  Card,\n  Divider,\n  withResize,\n  overrideThemeVariables\n} from 'ui-neumorphism'\nimport 'ui-neumorphism/dist/index.css'\n\nimport Topbar from '../containers/Topbar.jsx'\nimport Sidebar from '../containers/Sidebar.jsx'\nimport RightBar from '../containers/RightBar.jsx'\n\nimport routes from '../routes/index.js'\n\nclass MainContainer extends React.Component {\n  mainView = null\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      dark: false,\n      open: false\n    }\n    this.toggleTheme = this.toggleTheme.bind(this)\n    this.toggleSidebar = this.toggleSidebar.bind(this)\n    this.onSidebarClick = this.onSidebarClick.bind(this)\n  }\n\n  get isHome() {\n    const { pathname: p } = this.props.location\n    return (\n      p === '/' || p === '/home' || p === '/examples' || p === '/typography'\n    )\n  }\n\n  toggleTheme() {\n    overrideThemeVariables({\n      '--light-bg': '#E4EBF5',\n      '--light-bg-dark-shadow': '#bec8e4',\n      '--light-bg-light-shadow': '#ffffff',\n      '--dark-bg': '#444444',\n      '--dark-bg-dark-shadow': '#363636',\n      '--dark-bg-light-shadow': '#525252',\n      '--primary': '#2979ff',\n      '--primary-dark': '#2962ff',\n      '--primary-light': '#82b1ff'\n    })\n    this.setState({ dark: !this.state.dark })\n  }\n\n  toggleSidebar() {\n    this.setState({ open: !this.state.open })\n  }\n\n  onSidebarClick() {\n    this.mainView.scroll({\n      top: 0,\n      left: 0,\n      behavior: 'smooth'\n    })\n  }\n\n  render() {\n    const { isHome } = this\n    const { size } = this.props\n    const { dark, open } = this.state\n    const isSmall = size === 'sm' || size === 'xs'\n    return (\n      <main className={`theme--${dark ? 'dark' : 'light'}`}>\n        <Card\n          flat\n          dark={dark}\n          className={`main-container ${isSmall ? 'main-container-sm' : ''}`}\n        >\n          <Card>\n            <Topbar\n              size={size}\n              dark={dark}\n              onClick={this.toggleTheme}\n              onMenuClick={this.toggleSidebar}\n            />\n            <Divider dense dark={dark} />\n            <Card flat className='main-content'>\n              <Sidebar\n                dark={dark}\n                open={open}\n                size={size}\n                onClick={this.onSidebarClick}\n                onOutsideClick={this.toggleSidebar}\n              />\n              <Card\n                flat\n                id='mainView'\n                ref={(ref) => (this.mainView = findDOMNode(ref))}\n                className={`main-view main-view--${\n                  !isSmall ? 'large' : 'small'\n                } ${isHome ? 'main-view--home' : ''} ${\n                  open ? 'main-view--open' : ''\n                }`}\n              >\n                <Switch>\n                  {routes.map((route) => (\n                    <Route\n                      exact\n                      key={route.id}\n                      path={route.path}\n                      component={() => <route.component dark={dark} />}\n                    />\n                  ))}\n                </Switch>\n              </Card>\n              {isSmall || isHome ? null : <RightBar dark={dark} size={size} />}\n            </Card>\n          </Card>\n        </Card>\n      </main>\n    )\n  }\n}\n\nexport default withRouter(withResize(MainContainer, { onlyWidth: true }))\n"]},"metadata":{},"sourceType":"module"}